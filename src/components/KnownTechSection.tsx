import React, { useCallback, useState } from 'react';
import styled, { css } from 'styled-components';
import { useTranslation } from 'react-i18next';
import { TechList } from './TechList';
import { observer } from 'mobx-react';
import { useStores } from '../hooks/useStores';
import { SlidingImage } from './ImageAnimation';

export interface KnowsTechProps {}

export const KnownTechSection: React.FC<KnowsTechProps> = observer(({}) => {
  const { home } = useStores();
  const { t } = useTranslation();
  const [selectedTech, setSelectedTech] = useState<string>('');

  const onTechChange = useCallback(
    (newTech: string) => {
      setSelectedTech(newTech);
    },
    [setSelectedTech],
  );

  return (
    <>
      <SectionHeading>{t(`knownTechs.heading`)}</SectionHeading>{' '}
      <TechName key={selectedTech}>
        <em>{selectedTech}</em>
      </TechName>
      <Section>
        <SideMenu>
          <TechList onTechChange={onTechChange} />
        </SideMenu>
        {home.portfolioImages
          .filter((portfolioImage) => {
            return portfolioImage.madeWith.includes(selectedTech);
          })
          .map((projectDoneWithTechX) => {
            return (
              <ProjectsShow>
                <ProjectImageContainer>
                  <SlidingImage
                    image={projectDoneWithTechX.img}
                    imageAlt={projectDoneWithTechX.alt}
                    imageStyle={{
                      width: '20em',
                      height: 'auto',
                      opacity: 0,
                      position: 'absolute',
                    }}
                    animationDirection={'FadeIn'}
                    showOnPhone={true}
                  />
                </ProjectImageContainer>
                <ProjectDescription>
                  <CodeContainer></CodeContainer>
                </ProjectDescription>
              </ProjectsShow>
            );
          })}
      </Section>
    </>
  );
});

const Section = styled.section`
  width: 100%;
  min-height: 28em;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-content: center;
  justify-content: space-between;
`;

const SideMenu = styled.div`
  height: 100%;
  width: 20%;
`;

const ProjectsShow = styled.div`
  width: 80%;
  display: flex;
  flex-direction: row-reverse;
`;

const ProjectDescription = styled.div`
  background-color: red;
  height: 100%;
`;

const CodeContainer = styled.div``;

const ProjectImageContainer = styled.div`
  display: flex;
  align-items: center;
  min-width: 20em;
`;

const SectionHeading = styled.h1`
  color: ${(props) => props.theme.colors.textColorBlack};
  font-family: Corben;
  text-transform: uppercase;
  padding: 0.2em 0;
  text-align: center;
  margin-top: 4em;
  margin-bottom: 0;
`;

const TechName = styled.div`
  /* ----------------------------------------------
* Generated by Animista on 2020-12-29 22:25:54
* Licensed under FreeBSD License.
* See http://animista.net/license for more info. 
* w: http://animista.net, t: @cssanimista
* ---------------------------------------------- */

  /**
* ----------------------------------------
* animation jello-horizontal
* ----------------------------------------
*/
  @-webkit-keyframes jello-horizontal {
    0% {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
    30% {
      -webkit-transform: scale3d(1.25, 0.75, 1);
      transform: scale3d(1.25, 0.75, 1);
    }
    40% {
      -webkit-transform: scale3d(0.75, 1.25, 1);
      transform: scale3d(0.75, 1.25, 1);
    }
    50% {
      -webkit-transform: scale3d(1.15, 0.85, 1);
      transform: scale3d(1.15, 0.85, 1);
    }
    65% {
      -webkit-transform: scale3d(0.95, 1.05, 1);
      transform: scale3d(0.95, 1.05, 1);
    }
    75% {
      -webkit-transform: scale3d(1.05, 0.95, 1);
      transform: scale3d(1.05, 0.95, 1);
    }
    100% {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  }
  @keyframes jello-horizontal {
    0% {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
    30% {
      -webkit-transform: scale3d(1.25, 0.75, 1);
      transform: scale3d(1.25, 0.75, 1);
    }
    40% {
      -webkit-transform: scale3d(0.75, 1.25, 1);
      transform: scale3d(0.75, 1.25, 1);
    }
    50% {
      -webkit-transform: scale3d(1.15, 0.85, 1);
      transform: scale3d(1.15, 0.85, 1);
    }
    65% {
      -webkit-transform: scale3d(0.95, 1.05, 1);
      transform: scale3d(0.95, 1.05, 1);
    }
    75% {
      -webkit-transform: scale3d(1.05, 0.95, 1);
      transform: scale3d(1.05, 0.95, 1);
    }
    100% {
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  }

  -webkit-animation: jello-horizontal 0.5s both;
  animation: jello-horizontal 0.5s both;

  color: ${(props) => props.theme.colors.secondary};
  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),
    1px 1px 1px rgba(0, 0, 0, 0.1);

  font-family: Corben;
  text-transform: uppercase;
  font-size: 2em;
  margin-top: -0.5em;
`;
